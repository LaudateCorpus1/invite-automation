{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "RouterLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/lambda-probot-express-dev-router"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "lambda-probot-express",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-probot-express-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-probot-express-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "lambda-probot-express",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "RouterLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/lambda-probot-express/dev/1638582368546-2021-12-04T01:46:08.546Z/lambda-probot-express.zip"
        },
        "Handler": "handler.webhooks",
        "Runtime": "nodejs12.x",
        "FunctionName": "lambda-probot-express-dev-router",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "WEBHOOK_SECRET": "my-secret",
            "APP_ID": "154856",
            "PRIVATE_KEY": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA9wuOx8tOT4JK7qQ3Ai3RMx7k7Aw7ho2KJeVRyLNG8g3TiBtN\npB+WIrQQ3NXqC1f55hnMokVSRvJOCtm/oyg60J0OSZ8e6BIXPDMfBBcKEEmTVmQi\nN5BK5tcgR0kZvahQKS9HCkzlTxEOemoFQhzKli0gNiaH93pmt6Aq6+Bf2yboczfW\n1qSYiJSeEjDTKUUgPOJMy9EzajYe6IuKOOva7DWruorw8YOfDGQ9Pcs470ft4NJ6\nbr7Q2sNbtBUWOc4wCWzMH7lv7bhjNlapNlYNKFWZCi2M2I0IcQwLiPpiI3KS/YK5\nDwo4g4h2NpkOORI2ytnaqyKZIR3kConY3tOTCwIDAQABAoIBAQDm/4eiihfPgKVQ\nP3ywLOdQRbMIhOekCPUEOkkewYO1EfiZa+5NaLuZ94VM+Ti/IqQo5DbUBL3KWQdg\nXfszNIrKRhD2BjOADGptf9+gk2p1kFaUkUztZ56h+sXT4iaPkLJj0DE9EGnaZLiE\n/l2sU/+aLNfRynWYkns5eCqqJEN9Ri34E9FF9sd8HlQHjkC0WACd6DwSmzLCBQW0\nylqRXJ3drD4VKb+fLXF2nPG8OKy92IFJyjZBHorWdXlofigT1KACYNT/bTA4LIt3\nTImZieCtxIz1Ajjk524BOFcfFM2w+/tAVxVKTcV2xDoEpGcrnRzEi5D505tzIA5I\n+XTrbgYBAoGBAP+APwYOWr9d2QAmP1G1+DEke1QUPZWdvWFxnkP1P8CJU/zZeuAK\nnC8EOW4uGdPoVCogxi2HVdmrgTVhh0OnKE8+ubJs/hQgzDkcrE3laJ4BVr7iQjjR\ntseToFavFlRbx+gTg5f8M3Zisl7DjkF4bUJFndH++qZ5iJDiTy591W5zAoGBAPeH\nFWJjMQ+hSLeQXK8GYW7v3BoGfDMh7a3ZhEU2eYIDZApPt+ITf8PVTt4yI6ej31Ck\nD4IyDROSLm6nE29OWbr/Xdj+yZje2W8QV1Y1+eQGWvsRh/Hf7yw96Yhe/N1/K8C4\nMMSxo8KCppCHGdtBw0QN0ngj6l2SWMLgiyaMbUsJAoGBAPenM2+HUmbTbJc8e3uU\nSnI3zmL9C4SOVRayrploitbxRbt8giHPpvvbuF8XyGkidRIwmmdfGtPV7XP0iMwG\npofJYO2Vv+F6uPlS1aDbkMA2xAJaBZ5ViDmC2pOrOpWiMO6+m3siNi+2EvbPzn+f\nXygxmnwGDqZ2fu0Qr3d8+PgJAoGBAOM7A/uNOaWylvHEugEG530S/sh5eZzrIak+\nDLoJFySufjElG5aT9e9OK5e5CZhEzKXX5lDMJ8r2oF9+S04b7C3JblrdEy6eLZdS\ntgpzhJK67tybLGR0AblooLFLGfEwZHcH3+VBeib/D2+QRsFMLriTw8n8lpMN3SQR\nREzADzkZAoGAU0Vev9R1I2UTgpKYZgKiefmINx8YrQPBTmECnBboQhDUQefatHbs\n4fHpUfxNDj7gtrKUkPAiGtH9OhP/kaLOz4+Q1CKnX+3fr6HB6O80KeJrLUI6PVUj\nkHH7ig2tI7sYFELuMoRiIz03LMv4WaOUfrJqf+r9sdz8uLTcihqkcFs=\n-----END RSA PRIVATE KEY-----",
            "LOG_FORMAT": "json"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RouterLogGroup"
      ]
    },
    "RouterLambdaVersiony6F4Efe86vJfA0ywo8AwuzEVNKOxZsOl02xS8MnAyE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RouterLambdaFunction"
        },
        "CodeSha256": "7/EPPr3ZgBvS/mV8Im1aDaqcvAN/sr/tr5KWt1X1qxg="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-lambda-probot-express",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceApi": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "api",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceApiGithub": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceApi"
        },
        "PathPart": "github",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceApiGithubWebhooks": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceApiGithub"
        },
        "PathPart": "webhooks",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodApiGithubWebhooksPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApiGithubWebhooks"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RouterLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "RouterLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1638582359084": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodApiGithubWebhooksPost"
      ]
    },
    "RouterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RouterLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-lambda-probot-express-dev-ServerlessDeploymentBucketName"
      }
    },
    "RouterLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RouterLambdaVersiony6F4Efe86vJfA0ywo8AwuzEVNKOxZsOl02xS8MnAyE"
      },
      "Export": {
        "Name": "sls-lambda-probot-express-dev-RouterLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-lambda-probot-express-dev-ServiceEndpoint"
      }
    }
  }
}